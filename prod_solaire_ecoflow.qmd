---
title: "Production panneaux solaires EcoFlow"
author: "Hugo Mabillard"
format: html
embed-resources: true
editor: visual
execute: 
  echo: false
  warning: false
  message: false
---

## Production des panneaux solaires EcoFlow

```{r}
#| label: Chargement 
#| echo: false 
#| warning: false 

# Chargement des librairies 
library(ggplot2) 
library(data.table) 
library(openxlsx) 
library(tidyr) 
library(dplyr) 
library(lubridate)

## Lecture des données
# Chemins d'accès aux dossiers de données

#ddpath <- "C:/Users/doglo/OneDrive/Stat_R/Data/" # Laptop
ddpath <- "C:/Users/Hugo/OneDrive/Stat_R/Data/" # Desktop


## Lecture des données de base

# Résultats quotidien

quot <- as.data.table(read.xlsx(paste(ddpath, "ecoflow.xlsx", sep=""), sheet="quotidien", colNames = TRUE, detectDates = TRUE))

# Résultats détaillés (horaires)

prod <- as.data.table(read.xlsx(paste(ddpath, "ecoflow.xlsx", sep=""), sheet="Production", colNames = TRUE, detectDates = TRUE, startRow = 1))
```

```{r}
#| label: Preparation
#| echo: false
#| warning: false

# ----------------------- #
# Préparation des données #
# ----------------------- #

# Date aujourd'hui
auj <- Sys.Date()
hier <- auj - 1

# Données quotidiennes
quot[, an := year(date)][, mois := month(date)][, semaine := isoweek(date)][, trim := as.factor(quarter(date))][, jour := as.factor(wday(date, week_start = 1))]
quot[an == 2025, prix_achat := .3084][an == 2025, prix_vente := .12]

# Donnée horaires
prod[, an := year(date)][, mois := month(date)][, semaine := isoweek(date)][, trim := as.factor(quarter(date))][, jour := as.factor(wday(date, week_start = 1))]


## Format long
# Horaire
df_long <- prod %>%
  pivot_longer(
    cols = -c(date, an, mois, semaine, trim, jour), # Toutes les colonnes sauf dates
    names_to = "Heure", # Nouvelle colonne pour les heures
    values_to = "Production") %>%  # Valeurs de production horaire
  mutate(
    Heure = as.integer(Heure),
    date = as.Date(date)
  )

df_long <- as.data.table(df_long)

# Calcul du surplus théorique horaire (en kWh)
df_long[, surplus := ifelse(Production < 180, 0, Production - 180)]

surplus_jour <- df_long[, .(surplus = sum(surplus, na.rm=TRUE)), by="date"][order(date)]

# Journée production plus élevée
date_max <- quot[which.max(quot[, production]), date]
date_min <- quot[which.min(quot[date > "2025-05-16", production])+2, date]

prod_max <- quot[date == date_max, production]
prod_min <- quot[date == date_min, production]

prod_hier <- quot[date == hier, production]
```

Le jour où les panneaux ont produit le plus d'énergie fut le `r format(date_max, "%d %B %Y")` pour un total de `r prod_max` kWh.

À l'inverse, le `r format(date_min, "%d %B %Y")` les panneaux ont produit la plus faible quantité d'énergie (`r prod_min` kWh).

```{r}
#| label: Graph_prod_quot
#| echo: false
#| warning: false

# Quotidien
ggplot(quot, aes(x = date)) +
  geom_bar(aes(y = production), stat = "identity", fill = "#a7a824") + 
  labs(x = "Date", y = "Production (en Wh)", title = "Production quotidienne")

```

Comparaison entre le dernier jour (`r format(hier, "%d %B %Y")`; `r prod_hier` kWh) et le jour de production max. `r format(date_max, "%d %B %Y")`

```{r}
#| label: Graph_prod_quot_2
#| echo: false
#| warning: false

jour_ligne <- date_max
jour_barre <- auj - 1

df_ligne <- subset(df_long, date == jour_ligne)
df_barre <- subset(df_long, date == jour_barre)


ggplot() +
  geom_col(data = df_barre, aes(x = Heure, y = Production), fill = "#a7a824", alpha = 0.75) +
  geom_line(data = df_ligne, aes(x = Heure, y = Production), color = "#ffd700") +
  geom_point(data = df_ligne, aes(x = Heure, y = Production), color = "#ffd700", size = 2) +
#  geom_hline(yintercept = 180, linetype = "dashed", color = "khaki3") +
  labs(title = "Production horaire des panneaux solaires",
       x = "Heure de la journée",
       y = "Production (Wh)", 
       subtitle = paste("Barres =", jour_barre, "| Ligne =", jour_ligne)) +
  scale_x_continuous(breaks = seq(0, 23, 1)) +
  theme_gray() +
  theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1))

```

### Graphiques pour la production hebdomadaire et mensuelle.

```{r}
#| label: Graph_3
#| echo: false
#| warning: false


# Résumés des production hebdomadaires, mensuels, timestrielles, etc.
prod_hebd <- quot[, .(prod_kWh = (sum(production)/1000)), by = c("semaine", "an")][order(semaine, an)]
prod_mens <- quot[, .(prod_kWh = (sum(production)/1000)), by = c("mois", "an")][order(mois, an)]
prod_trim <- quot[, .(prod_kWh = (sum(production)/1000)), by = c("trim", "an")][order(trim, an)]
prod_an <- quot[, .(prod_kWh = (sum(production)/1000)), by = "an"][order(an)]


## Graphique
# Hebdomadaire
ggplot() +
  geom_col(data = prod_hebd, aes(x = semaine, y = prod_kWh), fill = "#ffd700", alpha = 0.85) +
  labs(title = "Production hebdomadaire (en kWh)",
       x = "Semaine",
       y = "Production (kWh)") +
  scale_x_continuous(labels = scales::number_format(accuracy = 1)) +
  theme_gray() +
  theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1), plot.title = element_text(hjust=0.5))

# Mensuel
ggplot() +
  geom_col(data = prod_mens, aes(x = mois, y = prod_kWh), fill = "#ffd700", alpha = 0.85) +
  labs(title = "Production mensuelle (en kWh)",
       x = "Mois",
       y = "Production (kWh)") +
  scale_x_continuous(breaks = seq(5,6,1)) +
  theme_gray() +
  theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1), plot.title = element_text(hjust=0.5))
```

### Classements des 10 jours les plus productifs et les moins productifs

```{r}
#| label: tabl1
#| echo: false
#| warning: false

# Tableau des meilleurs et moins bons jours
quot2 <- subset(quot, date > "2025-05-16", select=c("date", "production"))
setorder(quot2, -production)

tab_plus <- quot2[1:10, ]
tab_moins <- quot2[(.N - 9):.N,]

setorder(tab_moins, production)

```

**Les 10 meilleurs jours**

| Date                   | Production (en kWh)          |
|------------------------|------------------------------|
| `r tab_plus[1, date]`  | `r tab_plus[1, production]`  |
| `r tab_plus[2, date]`  | `r tab_plus[2, production]`  |
| `r tab_plus[3, date]`  | `r tab_plus[3, production]`  |
| `r tab_plus[4, date]`  | `r tab_plus[4, production]`  |
| `r tab_plus[5, date]`  | `r tab_plus[5, production]`  |
| `r tab_plus[6, date]`  | `r tab_plus[6, production]`  |
| `r tab_plus[7, date]`  | `r tab_plus[7, production]`  |
| `r tab_plus[8, date]`  | `r tab_plus[8, production]`  |
| `r tab_plus[9, date]`  | `r tab_plus[9, production]`  |
| `r tab_plus[10, date]` | `r tab_plus[10, production]` |

**Les 10 moins bons jours**

| Date                    | Production (en kWh)           |
|-------------------------|-------------------------------|
| `r tab_moins[1, date]`  | `r tab_moins[1, production]`  |
| `r tab_moins[2, date]`  | `r tab_moins[2, production]`  |
| `r tab_moins[3, date]`  | `r tab_moins[3, production]`  |
| `r tab_moins[4, date]`  | `r tab_moins[4, production]`  |
| `r tab_moins[5, date]`  | `r tab_moins[5, production]`  |
| `r tab_moins[6, date]`  | `r tab_moins[6, production]`  |
| `r tab_moins[7, date]`  | `r tab_moins[7, production]`  |
| `r tab_moins[8, date]`  | `r tab_moins[8, production]`  |
| `r tab_moins[9, date]`  | `r tab_moins[9, production]`  |
| `r tab_moins[10, date]` | `r tab_moins[10, production]` |
